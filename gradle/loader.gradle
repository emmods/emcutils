architectury.platformSetupLoomIde()

File commonAW = project ':common' file 'src/main/resources/emcutils.accesswidener'
loom.accessWidenerPath.set commonAW

String projectName = "${name.substring(0, 1).toUpperCase()}${name.substring(1)}"

configurations {
	common
	shadowCommon
	compileClasspath.extendsFrom common
	runtimeClasspath.extendsFrom common
}

dependencies {
	common(project(path: ':common', configuration: 'namedElements')) { transitive false }
	shadowCommon(project(path: ':common', configuration: "transformProduction$projectName")) { transitive false }
}

shadowJar {
	configurations = [project.configurations.shadowCommon]
	archiveClassifier = 'dev-shadow'
}

remapJar {
	inputFile.set shadowJar.archiveFile
	dependsOn shadowJar
	archiveClassifier = null
}

jar.archiveClassifier = 'dev'

sourcesJar {
	def commonSources = project(':common').sourcesJar
	dependsOn commonSources
	from commonSources.archiveFile.map { zipTree(it) }
	exclude 'emcutils.accesswidener'
}

components.java {
	withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
		skip()
	}
}

modrinth {
	projectId = 'emcutils'
	versionName = "${System.getenv().VERSION_NAME ?: versionNumber} ($projectName)"
	changelog = System.getenv().CHANGELOG ?: DEFAULT_CHANGELOG
	versionType = System.getenv().VERSION_TYPE ?: DEFAULT_VERSION_TYPE
	uploadFile = remapJar
	gameVersions = [libs.versions.minecraft.get()]
	loaders = [name]
}
