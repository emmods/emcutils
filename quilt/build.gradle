//file:noinspection GroovyAssignabilityCheck
plugins {
  alias libs.plugins.minotaur
  alias libs.plugins.shadow
  alias libs.plugins.loom.quiltflower
}

apply from: "../gradle/loader.gradle"
apply from: "../gradle/qmj.gradle"

architectury.loader("quilt")

File commonAW = project ":common" file "src/main/resources/emcutils.accesswidener"
File generatedResources = file "src/generated/resources"

configurations {
  developmentQuilt.extendsFrom common
}

dependencies {
  modImplementation libs.quilt.loader
  modImplementation libs.quilted.fabric.api

  modImplementation libs.midnightlib
  include libs.midnightlib

  modRuntimeOnly(libs.bundles.fabric.runtime) { transitive false }

  include project(":journey")
  include project(":voxel")
  include project(":xaero")
}

sourceSets.main.resources.srcDir generatedResources

task copyAW(type: Copy) {
  from commonAW
  into generatedResources
}

processResources.dependsOn copyAW

modrinth {
  dependencies {
    required.project "qvIfYCYJ" // QFAPI
    required.project "codAaoxh" // MidnightLib
    optional.project "mOgUt4GM" // Mod Menu
  }
  syncBodyFrom = rootProject.file("README.md").text
}
tasks.modrinth.dependsOn(tasks.modrinthSyncBody)

publishing.publications {
  mavenQuilt(MavenPublication) from components.java
}