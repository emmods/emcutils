plugins {
	alias libs.plugins.minotaur
	alias libs.plugins.shadow
	alias libs.plugins.loom.quiltflower
}

apply from: '../gradle/loader.gradle'
apply from: '../gradle/quilt-based.gradle'

architectury.loader 'quilt'

File commonAW = project ':common' file 'src/main/resources/emcutils.accesswidener'
File generatedResources = file 'src/generated/resources'

configurations {
	developmentQuilt.extendsFrom common
}

dependencies {
	modImplementation libs.midnightlib
	include libs.midnightlib

	modRuntimeOnly libs.modmenu
	modRuntimeOnly libs.lazydfu

	include project(':journey')
	include project(':xaero')
}

sourceSets.main.resources.srcDir generatedResources

task copyAW(type: Copy) {
	from commonAW
	into generatedResources
}

processResources.dependsOn copyAW

modrinth {
	dependencies {
		required.project 'qsl'
		embedded.project 'midnightlib'
		optional.project 'modmenu'
		optional.project 'journeymap'
	}
	syncBodyFrom = rootProject.file('README.md').text
}
tasks.modrinth.dependsOn tasks.modrinthSyncBody
