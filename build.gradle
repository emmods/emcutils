plugins {
  alias libs.plugins.architectury.plugin
  alias libs.plugins.architectury.loom apply false
  alias libs.plugins.quilt.mappings.on.loom
  alias libs.plugins.machete
}

architectury.minecraft = libs.versions.minecraft.get()

subprojects {
  apply plugin: "dev.architectury.loom"

  repositories {
    mavenLocal()
    maven {
      url "https://api.modrinth.com/maven"
      content { includeGroup "maven.modrinth" }
    }
    maven {
      url "https://cursemaven.com"
      content { includeGroup "curse.maven" }
    }
    maven {
      url "https://maven.quiltmc.org/repository/release"
      content {
        includeGroup "org.quiltmc"
        includeGroupByRegex "org\\.quiltmc\\..*"
      }
    }
  }

  dependencies {
    minecraft libs.minecraft
    mappings loom.layered { addLayer quiltMappings.mappings(
            "org.quiltmc:quilt-mappings:${libs.versions.minecraft.get()}+build.${libs.versions.quilt.mappings.get()}:v2"
    )}

    implementation libs.lombok
    annotationProcessor libs.lombok

    // -Dmixin.debug.export=true
    runtimeOnly libs.quiltflower
  }
}

allprojects {
  apply plugin: "java"
  apply plugin: "architectury-plugin"
  apply plugin: "maven-publish"
  apply plugin: "io.github.p03w.machete"

  group = "coffee.waffle.emcutils" // FIXME this is a hack, should use archiveBaseName
  archivesBaseName = "emcutils-${project.name}-${libs.versions.minecraft.get()}"
  version = rootProject.mod_version

  tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.release.set(17)
  }

  java.withSourcesJar()

  jar.from "LICENSE"

  publishing.repositories.maven {
    url = System.getenv().MAVEN_URL
    credentials {
      username = System.getenv().MAVEN_USER
      password = System.getenv().MAVEN_PASS
    }
    authentication {
      //noinspection GroovyAssignabilityCheck
      basic(BasicAuthentication)
    }
  }
}
