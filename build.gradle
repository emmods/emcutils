plugins {
	alias libs.plugins.architectury.plugin
	alias libs.plugins.architectury.loom apply false
	alias libs.plugins.loom.quiltflower apply false
	alias libs.plugins.machete
}

String mcVer = libs.versions.minecraft.get()
architectury.minecraft = mcVer

subprojects {
	apply plugin: 'dev.architectury.loom'
	apply plugin: 'io.github.juuxel.loom-quiltflower'

	repositories {
		exclusiveContent {
			forRepository {
				maven {
					name = 'Modrinth'
					url = 'https://api.modrinth.com/maven'
				}
			}
			filter {
				includeGroup 'maven.modrinth'
			}
		}
		exclusiveContent {
			forRepository {
				maven {
					name = 'CurseMaven'
					url = 'https://cfa2.cursemaven.com'
				}
			}
			filter {
				includeGroup 'curse.maven'
			}
		}
		exclusiveContent {
			forRepository {
				maven {
					name = 'QuiltMC'
					url = 'https://maven.quiltmc.org/repository/release'
				}
			}
			filter {
				includeGroup 'org.quiltmc'
				includeGroupByRegex 'org\\.quiltmc\\..*'
			}
		}
	}

	dependencies {
		minecraft libs.minecraft
		mappings variantOf(libs.yarn) { classifier 'v2' }
	}

	quiltflower.addToRuntimeClasspath = true

	tasks.named('prepareRemapJar') {
		dependsOn {
			tasks.named('optimizeOutputsOfJar')
		}
	}

	loom {
		runtimeOnlyLog4j = true
		clientOnlyMinecraftJar()

		runs {
			configureEach {
				vmArg '-Dmixin.debug.export=true'
			}
		}
	}
}

allprojects {
	apply plugin: 'java'
	apply plugin: 'architectury-plugin'
	apply plugin: 'maven-publish'
	apply plugin: 'io.github.p03w.machete'

	group = 'coffee.waffle'
	archivesBaseName = "emcutils-$project.name-$mcVer"
	version = rootProject.mod_version

	tasks.withType(JavaCompile).configureEach {
		options.encoding = 'UTF-8'
		options.release.set 17
	}

	java.withSourcesJar()

	jar.from 'LICENSE'
}
