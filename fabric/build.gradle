//file:noinspection GroovyAssignabilityCheck
plugins {
  id "com.github.johnrengelman.shadow" version "7.+"
}

architectury {
  platformSetupLoomIde()
  fabric()
}

configurations {
  common
  shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
  compileClasspath.extendsFrom common
  runtimeClasspath.extendsFrom common
  developmentFabric.extendsFrom common
}

dependencies {
  modImplementation "net.fabricmc:fabric-loader:${rootProject.loader_version}"

  modImplementation include("maven.modrinth:midnightlib:${rootProject.midnightlib_version}")

  modImplementation("com.terraformersmc:modmenu:${rootProject.modmenu_version}") {
    exclude group: "net.fabricmc.fabric-api"
    exclude group: "net.fabricmc"
  }

  modImplementation "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_version}"

  modApi("dev.architectury:architectury-fabric:${rootProject.architectury_version}") {
    exclude group: "net.fabricmc.fabric-api"
    exclude group: "net.fabricmc"
  }

  include project(":journey")
  include project(":voxel")
  include project(":xaero")

  modRuntimeOnly "maven.modrinth:lazydfu:0.1.2"

  common(project(path: ":common", configuration: "namedElements")) { transitive false }
  shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) { transitive false }
}

shadowJar {
  configurations = [project.configurations.shadowCommon]
  classifier "dev-shadow"
}

remapJar {
  inputFile.set shadowJar.archiveFile
  dependsOn shadowJar
  classifier null
}

jar {
  classifier "dev"
}

sourcesJar {
  def commonSources = project(":common").sourcesJar
  dependsOn commonSources
  from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
  withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
    skip()
  }
}

import com.modrinth.minotaur.dependencies.ModDependency
modrinth {
  projectId = "QYTT62S0"
  versionNumber = rootProject.mod_version + "+fabric"
  versionName = rootProject.release_title + " (Fabric)"
  changelog = rootProject.changeLog
  uploadFile = remapJar
  gameVersions = ["1.18.2"]
  loaders = ["fabric"]
  dependencies = [
          new ModDependency("P7dR8mSH", "required"), // FAPI
          new ModDependency("codAaoxh", "required"), // MidnightLib
          new ModDependency("mOgUt4GM", "optional"), // Mod Menu
  ]
  syncBodyFrom = rootProject.file("README.md").text
}
tasks.modrinth.dependsOn(tasks.modrinthSyncBody)

publishing {
  publications {
    mavenJavaFabric(MavenPublication) {
      from components.java
    }
  }
}